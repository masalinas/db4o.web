package com.thingtrack.db4o.web;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.TextField;

@SuppressWarnings("serial")
public class UserViewForm extends CustomComponent {

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TextField passwordField;
	@AutoGenerated
	private TextField usernameField;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public UserViewForm() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("200px");
		mainLayout.setHeight("100px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("200px");
		setHeight("100px");
		
		// txtUsername
		usernameField = new TextField();
		usernameField.setCaption("Username:");
		usernameField.setImmediate(false);
		usernameField.setWidth("-1px");
		usernameField.setHeight("-1px");
		usernameField.setNullRepresentation("");
		mainLayout.addComponent(usernameField, "top:20.0px;left:21.0px;");
		
		// txtPassword
		passwordField = new TextField();
		passwordField.setCaption("Password:");
		passwordField.setImmediate(false);
		passwordField.setWidth("-1px");
		passwordField.setHeight("-1px");
		passwordField.setNullRepresentation("");
		mainLayout.addComponent(passwordField, "top:60.0px;left:20.0px;");
		
		return mainLayout;
	}

}
